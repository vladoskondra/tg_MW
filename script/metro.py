import asyncio
from telethon import TelegramClient, sync, events
from random import randint
import time
from time import sleep
from telethon.tl.types import MessageEntityTextUrl, KeyboardButtonRow
from telethon import Button
import requests
from bs4 import BeautifulSoup
import random
import datetime
import math
from script.modules.gps.gpsGo import gps, station_Names
import re
from operator import itemgetter, attrgetter

api_id = 4889182
api_hash = "38ea074a004c2927bddf31c96f9c03e0"

client = TelegramClient('MW_bot', api_id, api_hash)
state = 'none'
game = 'metro_wars_bot'
gameId = 1745526034
state = 'none'
energy = 150
direction = 1
nick = ''
prof = ''
imhere = ''
stepBack = 0
trap_cd = False
rico_cd = False
knockback_cd = False
PL = False
almostRun = False
AutoRun = False
notEnoughNRG = False
needsReload = False
chatControl = 0
AutoGet = True
AutoFight = False
toLockParty = False
mod = 0
hardMode = 0
m2Fights = 0
m2Targets = 0
m2Babies = 0
m2Tickets = 0
m2Ticket1 = 0
m2Ticket2 = 0
m2Ticket3 = 0
weapon = 'üüß[üëÅ‚Äçüó®]MM TAC-50 –°–ª–∞–≤—ã ‚Ö¢ (üî∏+8) üì¶[üëÅ‚Äçüó®]['
stationNames = station_Names()

@client.on(events.NewMessage)
async def normal_handler(event):
    global AutoGet,state,game,gameId,state,energy,direction,nick,prof,imhere,stepBack,trap_cd,rico_cd,knockback_cd,PL,almostRun,weapon,mod,AutoRun,chatControl,notEnoughNRG,needsReload,hardMode,AutoFight,toLockParty,m2Fights,m2Babies,m2Tickets,m2Targets,m2Ticket1,m2Ticket2,m2Ticket3
    me = await client.get_me()
    s_user_id = event.message.from_id
    messag = event.message.to_dict()['message']
    sender = event.message.sender
    chatFrom = event.message.peer_id
    if hasattr(chatFrom,'user_id'):
        fromChat = event.message.peer_id.user_id
    elif hasattr(chatFrom,'channel_id'):
        fromChat = event.message.peer_id.channel_id
    # if hasattr(event.message.reply_markup, 'rows'):
    # print(event.message.reply_markup.rows[0].buttons[0].text)
    if messag.startswith('.test') and fromChat == me.id:
        state = 'test'
    if messag == '.set_chat' and sender == me:
        chatControl = fromChat
    if messag.startswith('.use_tea ') and fromChat == me.id:
        if messag == '.use_tea on':
            teaUse = True
        elif messag == '.use_tea off':
            teaUse = False
    if messag.startswith('.tea ') and nick in messag and teaUse == True:
        await client.send_message(game,'/use_Food64')
        await asyncio.sleep(1)
        m = await client.get_messages(game, limit=1)
        if '–ü—Ä–µ–¥–º–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' in m[0].message:
            await asyncio.sleep(1)
            await client.send_message(game,'/use_Food21')
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            if '–ü—Ä–µ–¥–º–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' in m[0].message:
                teaUse = False
        await asyncio.sleep(1)
        m = await client.get_messages(game, limit=1)
        if teaUse == True and '–ü—Ä–µ–¥–º–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in m[0].message and '—á–∞–π' in m[0].message and '—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞' in m[0].message:
            await m[0].click(0)
    if messag.startswith('.adr ') and nick in messag:
        await asyncio.sleep(random.randint(1,5))
        await client.send_message(game,'/h')
        await asyncio.sleep(0.5)
        adrText = ''
        m = await client.get_messages(game, limit=1)
        buttonsDir = m[0].reply_markup
        for r in range(len(buttonsDir.rows)):
            buttonsInRow = buttonsDir.rows[r].buttons
            for b in range(len(buttonsInRow)):
                if '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω' in buttonsInRow[b].text:
                    adrText = buttonsInRow[b].text
        if adrText == '':
            event.message.reply('–£ –º–µ–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ê–¥—Ä–µ–Ω–∞–ª–∏–Ω')
        else:
            await m[0].click(text=adrText)
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            buttonsDir = m[0].reply_markup
            for r in range(len(buttonsDir.rows)):
                buttonsInRow = buttonsDir.rows[r].buttons
                for b in range(len(buttonsInRow)):
                    partStatus = buttonsInRow[b].text
                    if '–ù–∞–∑–∞–¥' not in partStatus and int(re.findall('[0-9]+', partStatus)[0]) < 31:
                        await m[0].click(text=partStatus)
                        await asyncio.sleep(0.8)
    if messag.startswith('.hardmode') and fromChat == me.id:
        hardMode = int(messag.split(' ')[1]) -1
    if messag.startswith('.auto') and fromChat == me.id:
        if AutoFight == False:
            AutoFight = True
            await client.send_message(me, '–†–µ–∂–∏–º –ê–≤—Ç–æ–±–æ–π –≤–∫–ª—é—á–µ–Ω')
        else:
            AutoFight = False
            await client.send_message(me, '–†–µ–∂–∏–º –ê–≤—Ç–æ–±–æ–π –≤—ã–∫–ª—é—á–µ–Ω')
    if messag.startswith('.broke') and fromChat == me.id and state == 'none':
        state = 'broke'
        mod = int(messag.split(' ')[1]) - 1
        await client.send_message(game,'üì§ –í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç')
        await asyncio.sleep(1)
        m = await client.get_messages(game, limit=1)
        await m[0].click(mod)
    if '–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç' in messag and fromChat == gameId and state == 'broke':
        await asyncio.sleep(1.5)
        m = await client.get_messages(game, limit=1)
        await m[0].click(0)
        await asyncio.sleep(1.5)
        m = await client.get_messages(game, limit=1)
        fin = m[0].message
        while '–î–æ—Å—Ç—É–ø–Ω–∞—è' not in fin and '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤' not in fin and state == 'broke':
            m = await client.get_messages(game, limit=1)
            await m[0].click(0)
            m = await client.get_messages(game, limit=1)
            await asyncio.sleep(1.5)
            await m[0].click(0)
            m = await client.get_messages(game, limit=1)
            await asyncio.sleep(1.5)
            await m[0].click(0)
            await asyncio.sleep(1)
            fin = await client.get_messages(game, limit=1)

        state = 'none'
        print('end broke')
        mod = 0
    if messag.startswith('.stats') and (fromChat == me.id or fromChat == chatControl):
        if messag == '.stats m2':
            txt = ('**–ü—Ä–æ–≤–µ–¥–µ–Ω–æ –±–æ—ë–≤ –≤ –ú2:** '+str(m2Fights)
                   + '\n**–ù–∞–π–¥–µ–Ω–æ –ß—ë—Ä–Ω—ã—Ö –î–µ—Ç—ë–Ω—ã—à–µ–π:** '+str(m2Babies)+' –∏–∑ '+str(m2Targets)+' –º–æ–±–æ–≤ __('+str("{:0.2f}".format((m2Babies/m2Targets)*100))+'%)__'
                   +'\n**–ü–æ–ª—É—á–µ–Ω–æ —á–∞—Å—Ç–µ–π –ø—Ä–æ–ø—É—Å–∫–∞ –î-6:** '+str(m2Tickets)+' __('+str("{:0.2f}".format((m2Tickets/m2Babies)*100))+'%)__'
                   +'\n\nüá≥üáµ—á.1 –ø—Ä–æ–ø—É—Å–∫–∞ –î-6 ‚Çì'+str(m2Ticket1)+'\nüá≥üáµ—á.2 –ø—Ä–æ–ø—É—Å–∫–∞ –î-6 ‚Çì'+str(m2Ticket2)+'\nüá≥üáµ—á.3 –ø—Ä–æ–ø—É—Å–∫–∞ –î-6 ‚Çì'+str(m2Ticket3))
            await event.message.reply(txt)
    if messag.startswith('.synt ') and fromChat == me.id and state == 'none':
        state = 'synt'
        mod = int(messag.split(' ')[1])
        print(mod)
        await client.send_message(game,'üì§ –í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç')
    if '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å' in messag and fromChat == gameId and state == 'synt' and mod > 0:
        print(mod)
        await asyncio.sleep(1)
        m = await client.get_messages(game, limit=1)
        await m[0].click(mod-1)
        await asyncio.sleep(1)
        m = await client.get_messages(game, limit=1)
        fin = m[0].message
        if '–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ –º–æ–¥—É–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç' not in fin:
            m = await client.get_messages(game, limit=1)
            await asyncio.sleep(1)
            await m[0].click(0)
            m = await client.get_messages(game, limit=1)
            await asyncio.sleep(1)
            await m[0].click(0)
            m = await client.get_messages(game, limit=1)
            await asyncio.sleep(1)
            await client.send_message(game,'üì§ –í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç')
        else:
            state = 'none'
            mod = 0
    if messag.startswith('.box') and fromChat == me.id and state == 'none':
        if messag == '.box':
            state = 'box'
            await client.send_message(game,'/other')
        elif messag == '.box c':
            fin = ''
            state = 'open'
            while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin and '–†—é–∫–∑–∞–∫ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω' not in fin and state == 'open':
                await asyncio.sleep(1.5)
                await client.send_message(game,'/use_ClothesBoxIV')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                fin = m[0].message
                if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                    await asyncio.sleep(1)
                    await event.message.click(0)
                    await asyncio.sleep(1)
                    await event.message.click(0)
                    m = await client.get_messages(game, limit=1)
                    fin = m[0].message
            state = 'none'
    if state == 'box' and '–†—é–∫–∑–∞–∫ ('+nick+')\n\n–ü—Ä–æ—á–µ–µ' in messag and fromChat == gameId:
        baglines = messag.split('\n')
        for x in range(len(baglines)):
            if 'üéÅ –ù–∞–≥—Ä–∞–¥–∞ (36-40)' in baglines[x]:
                state = 'open'
                fin = ''
                while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin and state == 'open':
                    await asyncio.sleep(1.5)
                    await client.send_message(game,'/use_DangeRewardII')
                    await asyncio.sleep(1)
                    m = await client.get_messages(game, limit=1)
                    fin = m[0].message
                    if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        m = await client.get_messages(game, limit=1)
                        fin = m[0].message
                state = 'none'
                await asyncio.sleep(1)
                await client.send_message(game,'/other')
            elif 'üéÅ –ù–∞–≥—Ä–∞–¥–∞ (41-45)' in baglines[x]:
                state = 'open'
                fin = ''
                while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin and state == 'open':
                    await asyncio.sleep(1.5)
                    await client.send_message(game,'/use_DangeRewardIII')
                    await asyncio.sleep(1)
                    m = await client.get_messages(game, limit=1)
                    fin = m[0].message
                    if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        m = await client.get_messages(game, limit=1)
                        fin = m[0].message
                state = 'none'
                await asyncio.sleep(1)
                await client.send_message(game,'/other')
            elif '–ù–∞–≥—Ä–∞–¥–∞ (46-50)' in baglines[x]:
                state = 'open'
                fin = ''
                while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin and state == 'open':
                    await asyncio.sleep(1.5)
                    await client.send_message(game,'/use_DangeRewardIV')
                    m = await client.get_messages(game,limit=1)
                    fin = m[0].message
                    if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        m= await client.get_messages(game,limit=1)
                        fin = m[0].message
                state = 'none'
                await asyncio.sleep(1)
                await client.send_message(game,'/other')
            elif '–ö–æ—Ä–æ–±–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤' in baglines[x]:
                fin = ''
                state = 'open'
                while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin and state == 'open':
                    await asyncio.sleep(1.5)
                    await client.send_message(game,'/use_ResourcesBoxV')
                    await asyncio.sleep(1)
                    m = await client.get_messages(game,limit=1)
                    fin = m[0].message
                    if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        m = await client.get_messages(game,limit=1)
                        fin = m[0].message
                state = 'none'
                await asyncio.sleep(1)
                await client.send_message(game,'/other')
            elif baglines[x].startswith('üó≥ –ö–æ—Ä–æ–±–∫–∞ –æ—Ä—É–∂–∏—è'):
                fin = ''
                state = 'open'
                while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin and state == 'open':
                    await asyncio.sleep(1.5)
                    await client.send_message(game,'/use_WeaponBoxIV')
                    await asyncio.sleep(1)
                    m = await client.get_messages(game, limit=1)
                    fin = m[0].message
                    if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        m = await client.get_messages(game, limit=1)
                        fin = m[0].message
                state = 'none'
                await asyncio.sleep(1)
                await client.send_message(game,'/other')
            elif ('–ö–æ—Ä–æ–±–∫–∞ –±—Ä–æ–Ω–∏') in baglines[x] and state == 'open':
                fin = ''
                state = 'open'
                while '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                    await asyncio.sleep(1.5)
                    await client.send_message(game,'/use_ClothesBoxIV')
                    await asyncio.sleep(1)
                    m = await client.get_messages(game, limit=1)
                    fin = m[0].message
                    if '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' not in fin:
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        await asyncio.sleep(1)
                        await event.message.click(0)
                        m = await client.get_messages(game, limit=1)
                        fin = m[0].message
                state = 'none'
                await asyncio.sleep(1)
                await client.send_message(game,'/other')
    if messag.startswith('üì∞ –ü–µ—Ä—Å–æ–Ω–∞–∂\n\nüìüID: '+str(me.id)) and fromChat == gameId:
        personaj = messag.split('\n')
        nick = personaj[3].split('–ù–∏–∫: ')[1].split(' /a')[0]
        prof = personaj[5].split('–ö–ª–∞—Å—Å: ')[1]
        energy = int(personaj[10].split('üîã–≠–Ω–µ—Ä–≥–∏—è: ')[1].split('/')[0])
    # print(nick,prof,energy)
    if '–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞' in messag and (fromChat == gameId or fromChat == me.id):
        entities = event.message.entities
        for ent in entities:
            if isinstance(ent,MessageEntityTextUrl):
                if "captcha.metro-wars.online/?id=" in ent.url:
                    sleep(randint(3,6))
                    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36'}
                    try:
                        r = requests.get(ent.url,headers=headers)
                    except:
                        print('–ö–∞–ø—á–∞ –ø—Ä–æ–π–¥–µ–Ω–∞')
                        sleep(randint(2,5))
                        await client.send_message(game,'/start')
    if 'üö∏ –°—Ç–∞—Ç—É—Å: ' in messag and fromChat == gameId:
        if '‚ù§Ô∏è' in messag.split('\n')[0]:
            imhere = messag.split('\n')[3]
        else:
            imhere = messag.split('\n')[0]
    if messag.startswith('.imhere'):
        imhere = messag.split('.imhere ')[1]
    if messag == '.pl on' and sender == me and fromChat == me.id:
        PL = True
    elif messag == '.pl off' and sender == me and fromChat == me.id:
        PL = False
    if messag == '.autorun on' and PL == True and chatControl == fromChat:
        AutoRun = True
        await event.message.reply('–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤–∫–ª—é—á–µ–Ω')
    if messag == '.autorun off' and PL == True and chatControl == fromChat:
        AutoRun = False
        await event.message.reply('–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤—ã–∫–ª—é—á–µ–Ω')
    if messag.startswith('.leader ') and PL == True:
        swapToLeader = messag.split('leader ')[1]
        leaderChanged = False
        while leaderChanged == False:
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üëë –õ–∏–¥–µ—Ä—Å—Ç–≤–æ')
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            buttonsDir = m[0].reply_markup
            for r in range(len(buttonsDir.rows)):
                buttonsInRow = buttonsDir.rows[r].buttons
                for b in range(len(buttonsInRow)):
                    if swapToLeader in buttonsInRow[b].text:
                        await m[0].click(text=buttonsInRow[b].text)
                        await asyncio.sleep(0.5)
                        m = await client.get_messages(game, limit=2)
                        if '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–¥–∞—á–µ –ª–∏–¥–µ—Ä–∞ –≥—Ä—É–ø–ø—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' in m[1].message:
                            leaderChanged = True
                            PL = False
                            await event.message.reply('–ü—Ä–∏–Ω–∏–º–∞–π –ª–∏–¥–µ—Ä–∫—É')
    if messag.startswith('.dg') and sender == me and fromChat == me.id and state == 'none':
        state = messag.split('.')[1]
    if (messag.startswith('üéÅ –ù–∞–≥—Ä–∞–¥–∞ ') or messag.startswith('üó≥ –ö–æ—Ä–æ–±–∫–∞ ')) and fromChat == gameId:
        await asyncio.sleep(1)
        await event.message.click(0)
    if messag == '.get' and fromChat == me.id:
        if AutoGet == True:
            AutoGet = False
            await client.send_message(me, '–ê–≤—Ç–æ–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ')
        else:
            AutoGet = True
            await client.send_message(me, '–ê–≤—Ç–æ–ø–æ–ª—É—á–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ')
    if messag.startswith( 'üì• –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã:') and fromChat == gameId and AutoGet == True:
        await asyncio.sleep(1)
        await event.message.click(0)
    if PL == True and '—Ö–æ—á–µ—Ç –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É' in messag and fromChat == gameId:
        await asyncio.sleep(random.randint(1,3))
        await event.message.click(0)
    if PL == False and '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–¥–∞—á–µ –ª–∏–¥–µ—Ä–∞ –≥—Ä—É–ø–ø—ã' in messag and fromChat == gameId:
        await asyncio.sleep(random.randint(1,3))
        await event.message.click(0)
        PL = True
    if messag == '.lock' and PL == True:
        await client.send_message(game,'/group')
        await asyncio.sleep(0.5)
        await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
        await asyncio.sleep(0.5)
        await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
        await asyncio.sleep(0.5)
        await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=2)
        if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
            await event.message.reply(m[0].message)
        elif m[0].message == '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞':
            await event.message.reply('–û—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏ –µ—â–µ —Ä–∞–∑')
        elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
            await asyncio.sleep(0.5)
            await event.message.reply('–ó–∞—Ö–≤–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω')
        await asyncio.sleep(1)
        await client.send_message(game,'/buttons')
    if ('...–≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å –Ω–∞ –∑–∞–±—Ä–æ—à–µ–Ω–Ω—É—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é' in messag or '...–ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–Ω–∞—Ç—É' in messag) and fromChat == gameId and state.startswith('dg'):
        almostRun = False
        stepBack = 0
        trap_cd = False
        rico_cd = False
        knockback_cd = False
        needsReload = False
        await asyncio.sleep(10)
        m = await client.get_messages(game, limit=1)
        if '[B]' in m[0].message:
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
            await asyncio.sleep(2)
            await client.send_message(game,'‚¨á')
        else:
            isAutoFightButton = m[0].reply_markup
            if len(isAutoFightButton.rows)>1:
                if '[B]' not in messag and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                    await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
    elif weapon in messag and '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å' not in messag and fromChat == gameId and state.startswith('dg'):
        m = await client.get_messages(game, limit=1)
        isAutoFightButton = m[0].reply_markup
        if len(isAutoFightButton.rows)>1:
            if '[B]' not in messag and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
            elif '[B]' in messag and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π') and AutoFight == True:
                await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
            elif '[B]' in messag and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π') and AutoFight == False:
                if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - ‚á¥ –†–∏–∫–æ—à–µ—Ç' in messag:
                    rico_cd = False
                if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üñ≤ –õ–æ–≤—É—à–∫–∞' in messag:
                    trap_cd = False
                if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üîä –û—Ç–±—Ä–æ—Å' in messag:
                    knockback_cd = False
                if messag.split(weapon)[1].split('/')[0] == '0':
                    needsReload = True
                if trap_cd == False:
                    await asyncio.sleep(3)
                    await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                    await asyncio.sleep(2)
                    await client.send_message(game,'üñ≤ –õ–æ–≤—É—à–∫–∞')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                    await asyncio.sleep(1)
                    target = await client.get_messages(game, limit=1)
                    await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                    trap_cd = True
                elif needsReload == True:
                    await asyncio.sleep(3)
                    await client.send_message(game,'üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞')
                    needsReload = False
                elif rico_cd == False:
                    await asyncio.sleep(3)
                    await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚á¥ –†–∏–∫–æ—à–µ—Ç')
                    await asyncio.sleep(1)
                    target = await client.get_messages(game, limit=1)
                    await asyncio.sleep(2)
                    await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                    rico_cd = True
                elif knockback_cd == False:
                    await asyncio.sleep(3)
                    await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                    await asyncio.sleep(2)
                    await client.send_message(game,'üîä –û—Ç–±—Ä–æ—Å')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                    await asyncio.sleep(1)
                    target = await client.get_messages(game, limit=1)
                    await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                    knockback_cd = True
                else:
                    await asyncio.sleep(3)
                    await client.send_message(game,'‚öîÔ∏è –ê—Ç–∞–∫–∞')
                    await asyncio.sleep(1)
                    target = await client.get_messages(game, limit=1)
                    await asyncio.sleep(2)
                    await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
    # <============================================================================================BOSS
    if messag.startswith('.boss') and sender == me and fromChat == me.id and state == 'none':
        state = 'boss'
        await client.send_message(me, '–†–µ–∂–∏–º –ë–æ—Å—Å—ã –≤–∫–ª—é—á–µ–Ω')
    if messag.startswith('‚ùï–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–¥–∞–µ—Ç ') and fromChat == gameId and state == 'boss':
        stepBack = 0
        almostRun = False
        trap_cd = False
        rico_cd = False
        knockback_cd = False
        await asyncio.sleep(7)
        if '–ê—Ä–∞—Ö–Ω–∞' in messag:
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚åõÔ∏è –ü–µ—Ä–µ–∂–¥–∞—Ç—å')
            stepBack = stepBack + 1
        else:
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
            await asyncio.sleep(2)
            await client.send_message(game,'‚Üò')
            stepBack = 4
    elif weapon in messag and '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å' not in messag and fromChat == gameId and state == 'boss':
        if stepBack == 1:
            await asyncio.sleep(2)
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
            await asyncio.sleep(2)
            await client.send_message(game,'‚û°')
            stepBack = stepBack + 1
        elif stepBack == 2:
            await asyncio.sleep(2)
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
            await asyncio.sleep(2)
            await client.send_message(game,'‚¨á')
            stepBack = stepBack + 1
        elif stepBack == 3:
            await asyncio.sleep(3)
            await client.send_message(game,'‚öîÔ∏è –ê—Ç–∞–∫–∞')
            await asyncio.sleep(1)
            target = await client.get_messages(game, limit=1)
            await asyncio.sleep(2)
            await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
            stepBack = 4
        elif stepBack == 4:
            if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - ‚á¥ –†–∏–∫–æ—à–µ—Ç' in messag:
                rico_cd = False
            if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üñ≤ –õ–æ–≤—É—à–∫–∞' in messag:
                trap_cd = False
            if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üîä –û—Ç–±—Ä–æ—Å' in messag:
                knockback_cd = False
            if trap_cd == False:
                await asyncio.sleep(3)
                await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                await asyncio.sleep(2)
                await client.send_message(game,'üñ≤ –õ–æ–≤—É—à–∫–∞')
                await asyncio.sleep(2)
                await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                await asyncio.sleep(1)
                target = await client.get_messages(game, limit=1)
                await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                await asyncio.sleep(2)
                await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                trap_cd = True
            elif '0/3]' in messag.split(weapon)[1]:
                await asyncio.sleep(3)
                await client.send_message(game,'üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞')
            elif rico_cd == False:
                await asyncio.sleep(3)
                await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                await asyncio.sleep(2)
                await client.send_message(game,'‚á¥ –†–∏–∫–æ—à–µ—Ç')
                await asyncio.sleep(1)
                target = await client.get_messages(game, limit=1)
                await asyncio.sleep(2)
                await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                rico_cd = True
            elif knockback_cd == False:
                await asyncio.sleep(3)
                await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                await asyncio.sleep(2)
                await client.send_message(game,'üîä –û—Ç–±—Ä–æ—Å')
                await asyncio.sleep(2)
                await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                await asyncio.sleep(1)
                target = await client.get_messages(game, limit=1)
                await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                await asyncio.sleep(2)
                await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                knockback_cd = True
            else:
                await asyncio.sleep(3)
                await client.send_message(game,'‚öîÔ∏è –ê—Ç–∞–∫–∞')
                await asyncio.sleep(1)
                target = await client.get_messages(game, limit=1)
                await asyncio.sleep(2)
                await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)

    # <============================================================================================M2
    if messag.startswith('.m2') and sender == me and fromChat == me.id and state == 'none':
        state = 'm2'
        await client.send_message(me, '–†–µ–∂–∏–º M2 –≤–∫–ª—é—á–µ–Ω')
    if ('–í—ã –Ω–∞–ø–∞–¥–∞–µ—Ç–µ –Ω–∞' in messag or '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–¥–∞—é—Ç:' in messag) and fromChat == gameId and state == 'm2':
        m2Fights = m2Fights + 1
        targets = messag.split('–í—ã –Ω–∞–ø–∞–¥–∞–µ—Ç–µ –Ω–∞\n\n')[1].split('\n\n–æ–∂–∏–¥–∞–π—Ç–µ')[0]
        babySpl = targets.split('\n')
        for baby in range(len(babySpl)):
            m2Targets = m2Targets + 1
            if '–ß—ë—Ä–Ω—ã–π –î–µ—Ç—ë–Ω—ã—à' in babySpl[baby]:
                m2Babies = m2Babies + 1
        almostRun = False
        stepBack = 0
        trap_cd = False
        rico_cd = False
        knockback_cd = False
        needsReload = False
        await asyncio.sleep(5)
        m = await client.get_messages(game, limit=1)
        if AutoFight == True:
            isAutoFightButton = m[0].reply_markup
            if len(isAutoFightButton.rows)>1:
                if isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                    await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
        else:
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
            await asyncio.sleep(2)
            await client.send_message(game,'‚¨Ö')
            stepBack = 2
    elif weapon in messag and '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å' not in messag and fromChat == gameId and state.startswith('m2'):
        m = await client.get_messages(game, limit=1)
        isAutoFightButton = m[0].reply_markup
        if len(isAutoFightButton.rows)>1:
            if AutoFight == True and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
            elif AutoFight == False and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                if stepBack == 1:
                    await asyncio.sleep(3)
                    await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚¨Ö')
                    stepBack = 2
                elif stepBack == 2:
                    if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - ‚á¥ –†–∏–∫–æ—à–µ—Ç' in messag:
                        rico_cd = False
                    if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üñ≤ –õ–æ–≤—É—à–∫–∞' in messag:
                        trap_cd = False
                    if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üîä –û—Ç–±—Ä–æ—Å' in messag:
                        knockback_cd = False
                    if messag.split(weapon)[1].split('/')[0] == '0':
                        needsReload = True
                    if trap_cd == False:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                        await asyncio.sleep(2)
                        await client.send_message(game,'üñ≤ –õ–æ–≤—É—à–∫–∞')
                        await asyncio.sleep(1)
                        await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                        await asyncio.sleep(2)
                        await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                        trap_cd = True
                    elif needsReload == True:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞')
                        needsReload = False
                    elif rico_cd == False:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                        await asyncio.sleep(2)
                        await client.send_message(game,'‚á¥ –†–∏–∫–æ—à–µ—Ç')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                        rico_cd = True
                    elif knockback_cd == False:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                        await asyncio.sleep(2)
                        await client.send_message(game,'üîä –û—Ç–±—Ä–æ—Å')
                        await asyncio.sleep(1)
                        await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                        await asyncio.sleep(2)
                        await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                        knockback_cd = True
                    else:
                        await asyncio.sleep(3)
                        await client.send_message(game,'‚öîÔ∏è –ê—Ç–∞–∫–∞')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await asyncio.sleep(2)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)

    # <============================================================================================M2
    if messag == '.farm' and sender == me and fromChat == me.id and state == 'none':
        state = 'farm'
        await client.send_message(me, '–†–µ–∂–∏–º FARM –≤–∫–ª—é—á–µ–Ω')
    if ('–í—ã –Ω–∞–ø–∞–¥–∞–µ—Ç–µ –Ω–∞' in messag or '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–¥–∞—é—Ç:' in messag) and fromChat == gameId and state == 'farm':
        if '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–¥–∞—é—Ç' in messag:
            await asyncio.sleep(2)
            await client.send_message(game,'‚öîÔ∏è –î—Ä–∞—Ç—å—Å—è')
        almostRun = False
        stepBack = 0
        trap_cd = False
        rico_cd = False
        knockback_cd = False
        needsReload = False
        await asyncio.sleep(5)
        m = await client.get_messages(game, limit=1)
        if AutoFight == True:
            isAutoFightButton = m[0].reply_markup
            if len(isAutoFightButton.rows)>1:
                if isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                    await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
        else:
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(2)
            await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
            await asyncio.sleep(2)
            await client.send_message(game,'‚¨Ö')
            stepBack = 2
    elif weapon in messag and '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å' not in messag and fromChat == gameId and state.startswith('m2'):
        m = await client.get_messages(game, limit=1)
        isAutoFightButton = m[0].reply_markup
        if len(isAutoFightButton.rows)>1:
            if AutoFight == True and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                await client.send_message(game,isAutoFightButton.rows[3].buttons[0].text)
            elif AutoFight == False and isAutoFightButton.rows[3].buttons[0].text.startswith('‚ôªÔ∏è –ê–≤—Ç–æ–±–æ–π'):
                if stepBack == 1:
                    await asyncio.sleep(3)
                    await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚ÜïÔ∏è –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é')
                    await asyncio.sleep(2)
                    await client.send_message(game,'‚¨Ö')
                    stepBack = 2
                elif stepBack == 2:
                    if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - ‚á¥ –†–∏–∫–æ—à–µ—Ç' in messag:
                        rico_cd = False
                    if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üñ≤ –õ–æ–≤—É—à–∫–∞' in messag:
                        trap_cd = False
                    if '‚è± –î–æ—Å—Ç—É–ø–Ω–æ - üîä –û—Ç–±—Ä–æ—Å' in messag:
                        knockback_cd = False
                    if messag.split(weapon)[1].split('/')[0] == '0':
                        needsReload = True
                    if trap_cd == False:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                        await asyncio.sleep(2)
                        await client.send_message(game,'üñ≤ –õ–æ–≤—É—à–∫–∞')
                        await asyncio.sleep(1)
                        await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                        await asyncio.sleep(2)
                        await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                        trap_cd = True
                    elif needsReload == True:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞')
                        needsReload = False
                    elif rico_cd == False:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                        await asyncio.sleep(2)
                        await client.send_message(game,'‚á¥ –†–∏–∫–æ—à–µ—Ç')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                        rico_cd = True
                    elif knockback_cd == False:
                        await asyncio.sleep(3)
                        await client.send_message(game,'üåÄ –£–º–µ–Ω–∏—è')
                        await asyncio.sleep(2)
                        await client.send_message(game,'üîä –û—Ç–±—Ä–æ—Å')
                        await asyncio.sleep(1)
                        await client.send_message(game,'‚èπ –ö –æ–±—ä–µ–∫—Ç—É')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)
                        await asyncio.sleep(2)
                        await client.send_message(game,'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                        knockback_cd = True
                    else:
                        await asyncio.sleep(3)
                        await client.send_message(game,'‚öîÔ∏è –ê—Ç–∞–∫–∞')
                        await asyncio.sleep(1)
                        target = await client.get_messages(game, limit=1)
                        await asyncio.sleep(2)
                        await client.send_message(game,target[0].reply_markup.rows[0].buttons[0].text)

    # <============================================================================================PARTY
    if '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –æ—Ç–∫–ª—é—á–µ–Ω' in messag and fromChat == gameId and PL == True and state != 'none':
        toLockParty = True
    if '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in messag and fromChat == gameId and PL == True and state != 'none':
        toLockParty = False
    if messag == '–¢—ã –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É–ª!' and fromChat == gameId and PL == True and notEnoughNRG == True and (state == 'boss' or state.startswith('dg') or state == 'm2') and AutoRun == True:
        notEnoughNRG = False
        if state == 'dg 36-40':
            run = 'ü•Ä –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª (36-40)'
        elif state == 'dg 41-45':
            run = 'ü•Ä –ê–ø—Ç–µ–∫–∞—Ä—Å–∫–∏–π –æ–≥–æ—Ä–æ–¥ (41-45)'
        elif state == 'dg 46-50':
            run = 'ü•Ä –ü–ª–æ—â–∞–¥—å —Ç—Ä—ë—Ö –≤–æ–∫–∑–∞–ª–æ–≤ (46-50)'
        elif state == 'boss':
            run = 'ü¶™ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–∞–Ω–∫—É'
        elif state == 'm2' or state == 'farm':
            run = 'üëæ –ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤'
            if toLockParty == True and state == 'm2':
                isLocked = False
                await client.send_message(game,'/group')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
                while isLocked == False:
                    await asyncio.sleep(0.5)
                    m = await client.get_messages(game, limit=2)
                    if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
                        isLocked = True
                        await client.send_message(chatControl,m[0].message)
                    elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
                        isLocked = True
                        toLockParty = False
                        await asyncio.sleep(0.5)
                        await client.send_message(game,'/buttons')
                        await asyncio.sleep(1)
                        await client.send_message(game,run)
        if state.startswith('dg'):
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üë• –°–æ—Å—Ç–∞–≤')
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            splitGroup = m[0].message.split('[1')[1].split('\n')
            plToAdr = ''
            for x in range(len(splitGroup)):
                if '[üëë] ' in splitGroup[x]:
                    plToAdr = plToAdr + splitGroup[x].split('[üëë] ')[1].split(' (')[0] + ' '
                else:
                    plToAdr = plToAdr + splitGroup[x].split('] ')[1].split(' (')[0] + ' '
            if plToAdr != '':
                await client.send_message(chatControl,'.tea '+plToAdr)
            await asyncio.sleep(0.5)
            await client.send_message(game,'/buttons')
            await asyncio.sleep(5)
        await client.send_message(game,run)
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å ' in m[0].message:
            await m[0].click(hardMode)
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            await m[0].click(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–ú–æ–Ω—Å—Ç—Ä–æ–≤ –Ω–µ—Ç' in m[0].message:
            await client.send_message(game,'/flashlight')
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            await m[0].click(0)
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            if '–ó–∞–ø–∞—Å –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª' in m[0].message:
                await m[0].click(1)
                await asyncio.sleep(1)
                await client.send_message(game,'üéí –†—é–∫–∑–∞–∫')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                bSpl = m[0].message.split('\n')
                flToWear = ''
                for b in range(len(bSpl)):
                    if bSpl[b].startswith('üî¶ –§–æ–Ω–∞—Ä–∏–∫ Ô¥æ100'):
                        flToWear = b+1
                        break
                await client.send_message(game,bSpl[flToWear])
                await asyncio.sleep(1)
                await client.send_message(game,'/flashlight')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                await m[0].click(1)
                await asyncio.sleep(1)
                await m[0].click(0)
                await asyncio.sleep(2)
            await client.send_message(game,'üëæ –ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏' in m[0].message:
            await client.send_message(chatControl,'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏, –∂–¥–µ–º')
            notEnoughNRG = True
        elif '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' in m[0].message:
            await client.send_message(chatControl,m[0].message+'\n\n.leader __NICKNAME__, —á—Ç–æ–± —Å–º–µ–Ω–∏—Ç—å –ª–∏–¥–µ—Ä–∞')
        elif '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞—Ö–≤–∞—Ç' in m[0].message:
            isLocked = False
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
            while isLocked == False:
                await asyncio.sleep(0.5)
                m = await client.get_messages(game, limit=2)
                if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
                    isLocked = True
                    await client.send_message(chatControl,m[0].message)
                elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
                    isLocked = True
                    await asyncio.sleep(0.5)
                    await client.send_message(game,'/buttons')
                    await asyncio.sleep(1)
                    await client.send_message(game,run)
    if (state == 'boss' or state.startswith('dg') or state == 'm2' or state == 'farm') and '–ë–æ–π –≤—ã–∏–≥—Ä–∞–Ω' in messag and fromChat == gameId and PL == True and AutoRun == True:
        if '–ø—Ä–æ–ø—É—Å–∫–∞ –î-6' in messag:
            lootSpl = messag.split('\n')
            for l in range(len(lootSpl)):
                if '–ø—Ä–æ–ø—É—Å–∫–∞ –î-6' in lootSpl[l]:
                    await client.send_message(chatControl,'–ü–æ–ª—É—á–µ–Ω–∞ '+lootSpl[l])
                    m2Tickets = m2Tickets + 1
                    if '—á.1' in lootSpl[l]:
                        m2Ticket1 = m2Ticket1 + 1
                    elif '—á.2' in lootSpl[l]:
                        m2Ticket2 = m2Ticket2 + 1
                    elif '—á.3' in lootSpl[l]:
                        m2Ticket3 = m2Ticket3 + 1
        if state == 'm2' or state == 'farm':
            await asyncio.sleep(2)
        else:
            await asyncio.sleep(random.randint(5,10))
        if state == 'farm':
            await client.send_message(game,'/h')
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            spl = m[0].message.split('\n')[0].split(' üîã')[0]
            heartEmoji = '‚ù§Ô∏è'
            if '‚ù§Ô∏è' in spl:
                heartEmoji = '‚ù§Ô∏è'
            elif 'üíõ' in spl:
                heartEmoji = 'üíõ'
            elif '‚ù£Ô∏è' in spl:
                heartEmoji = '‚ù£Ô∏è'
            pHPm = re.sub('\D', '', spl.split('/')[1])
            pHPc = re.sub('\D', '', spl.split(heartEmoji)[1].split('/')[0])
            myHP = math.ceil((int(pHPc)/int(pHPm))*100)
            if myHP < 55:
                await asyncio.sleep(1)
                await m[0].click(0)
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                await m[0].click(0)
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                await m[0].click(1)
            if heartEmoji == '‚ù£Ô∏è':
                await asyncio.sleep(1)
                adrText = ''
                m = await client.get_messages(game, limit=1)
                buttonsDir = m[0].reply_markup
                for r in range(len(buttonsDir.rows)):
                    buttonsInRow = buttonsDir.rows[r].buttons
                    for b in range(len(buttonsInRow)):
                        if '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω' in buttonsInRow[b].text:
                            adrText = buttonsInRow[b].text
                if adrText != '':
                    await m[0].click(text=adrText)
                    await asyncio.sleep(0.5)
                    m = await client.get_messages(game,limit=1)
                    buttonsDir = m[0].reply_markup
                    for r in range(len(buttonsDir.rows)):
                        buttonsInRow = buttonsDir.rows[r].buttons
                        for b in range(len(buttonsInRow)):
                            partStatus = buttonsInRow[b].text
                            if '–ù–∞–∑–∞–¥' not in partStatus and int(re.findall('[0-9]+',partStatus)[0]) < 31:
                                await m[0].click(text=partStatus)
                                await asyncio.sleep(0.8)
        else:
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üë• –°–æ—Å—Ç–∞–≤')
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            splitGroup = m[0].message.split('\n')
            plToAdr = ''
            for x in range(len(splitGroup)):
                if '‚ù£Ô∏è' in splitGroup[x]:
                    if '[üëë] ' in splitGroup[x]:
                        plToAdr = plToAdr + splitGroup[x].split('[üëë] ')[1].split(' (‚ù£Ô∏è')[0] + ' '
                    else:
                        plToAdr = plToAdr + splitGroup[x].split('] ')[1].split(' (‚ù£Ô∏è')[0] + ' '
            if plToAdr != '':
                await client.send_message(chatControl,'.adr '+plToAdr)
            await asyncio.sleep(0.5)
            await client.send_message(game,'/buttons')
            if plToAdr != '':
                await asyncio.sleep(random.randint(10,20))
            elif nick in plToAdr:
                await asyncio.sleep(random.randint(1,5))
                await client.send_message(game,'/h')
                await asyncio.sleep(0.5)
                adrText = ''
                m = await client.get_messages(game, limit=1)
                buttonsDir = m[0].reply_markup
                for r in range(len(buttonsDir.rows)):
                    buttonsInRow = buttonsDir.rows[r].buttons
                    for b in range(len(buttonsInRow)):
                        if '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω' in buttonsInRow[b].text:
                            adrText = buttonsInRow[b].text
                if adrText != '':
                    await m[0].click(text=adrText)
                    await asyncio.sleep(1)
                    m = await client.get_messages(game,limit=1)
                    buttonsDir = m[0].reply_markup
                    for r in range(len(buttonsDir.rows)):
                        buttonsInRow = buttonsDir.rows[r].buttons
                        for b in range(len(buttonsInRow)):
                            partStatus = buttonsInRow.text
                            if '–ù–∞–∑–∞–¥' not in partStatus and int(re.findall('[0-9]+',partStatus)[0]) < 31:
                                await m[0].click(text=partStatus)
                                await asyncio.sleep(1)
            else:
                await asyncio.sleep(3)
        await asyncio.sleep(1)
        if state == 'dg 36-40':
            run = 'ü•Ä –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª (36-40)'
        elif state == 'dg 41-45':
            run = 'ü•Ä –ê–ø—Ç–µ–∫–∞—Ä—Å–∫–∏–π –æ–≥–æ—Ä–æ–¥ (41-45)'
        elif state == 'dg 46-50':
            run = 'ü•Ä –ü–ª–æ—â–∞–¥—å —Ç—Ä—ë—Ö –≤–æ–∫–∑–∞–ª–æ–≤ (46-50)'
        elif state == 'boss':
            run = 'ü¶™ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–∞–Ω–∫—É'
        elif state == 'm2' or state == 'farm':
            run = 'üëæ –ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤'
            if toLockParty == True and state == 'm2':
                isLocked = False
                await client.send_message(game,'/group')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
                while isLocked == False:
                    await asyncio.sleep(0.5)
                    m = await client.get_messages(game, limit=2)
                    if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
                        isLocked = True
                        await client.send_message(chatControl,m[0].message)
                    elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
                        isLocked = True
                        toLockParty = False
                        await asyncio.sleep(0.5)
                        await client.send_message(game,'/buttons')
                        await asyncio.sleep(1)
                        await client.send_message(game,run)
        await client.send_message(game,run)
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å ' in m[0].message:
            await m[0].click(hardMode)
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            await m[0].click(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–ú–æ–Ω—Å—Ç—Ä–æ–≤ –Ω–µ—Ç' in m[0].message:
            await client.send_message(game,'/flashlight')
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            await m[0].click(0)
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            if '–ó–∞–ø–∞—Å –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª' in m[0].message:
                await m[0].click(1)
                await asyncio.sleep(1)
                await client.send_message(game,'üéí –†—é–∫–∑–∞–∫')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                bSpl = m[0].message.split('\n')
                flToWear = ''
                for b in range(len(bSpl)):
                    if bSpl[b].startswith('üî¶ –§–æ–Ω–∞—Ä–∏–∫ Ô¥æ100'):
                        flToWear = b+1
                        break
                await client.send_message(game,bSpl[flToWear])
                await asyncio.sleep(1)
                await client.send_message(game,'/flashlight')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                await m[0].click(1)
                await asyncio.sleep(1)
                await m[0].click(0)
                await asyncio.sleep(2)
            await client.send_message(game,'üëæ –ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏' in m[0].message:
            await client.send_message(chatControl,'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏, –∂–¥–µ–º')
            notEnoughNRG = True
        elif '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' in m[0].message:
            await client.send_message(chatControl,m[0].message+'\n\n.leader __NICKNAME__, —á—Ç–æ–± —Å–º–µ–Ω–∏—Ç—å –ª–∏–¥–µ—Ä–∞')
        elif '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞—Ö–≤–∞—Ç' in m[0].message:
            isLocked = False
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
            while isLocked == False:
                await asyncio.sleep(0.5)
                m = await client.get_messages(game, limit=2)
                if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
                    isLocked = True
                    await client.send_message(chatControl,m[0].message)
                elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
                    isLocked = True
                    await asyncio.sleep(0.5)
                    await client.send_message(game,'/buttons')
                    await asyncio.sleep(1)
                    await client.send_message(game,run)
    if messag == '.run' and almostRun == False and PL == True and chatControl == fromChat:
        await client.send_message(game,'/buttons')
        almostRun = True
        await asyncio.sleep(1)
        if state == 'dg 36-40':
            run = 'ü•Ä –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª (36-40)'
        elif state == 'dg 41-45':
            run = 'ü•Ä –ê–ø—Ç–µ–∫–∞—Ä—Å–∫–∏–π –æ–≥–æ—Ä–æ–¥ (41-45)'
        elif state == 'dg 46-50':
            run = 'ü•Ä –ü–ª–æ—â–∞–¥—å —Ç—Ä—ë—Ö –≤–æ–∫–∑–∞–ª–æ–≤ (46-50)'
        elif state == 'boss':
            run = 'ü¶™ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–∞–Ω–∫—É'
        elif state == 'm2' or state == 'farm':
            run = 'üëæ –ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤'
            if toLockParty == True and state == 'm2':
                isLocked = False
                await client.send_message(game,'/group')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
                await asyncio.sleep(0.5)
                await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
                while isLocked == False:
                    await asyncio.sleep(0.5)
                    m = await client.get_messages(game, limit=2)
                    if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
                        isLocked = True
                        await client.send_message(chatControl,m[0].message)
                    elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
                        isLocked = True
                        toLockParty = False
                        await asyncio.sleep(0.5)
                        await client.send_message(game,'/buttons')
                        await asyncio.sleep(1)
                        await client.send_message(game,run)
        if state.startswith('dg'):
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üë• –°–æ—Å—Ç–∞–≤')
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            splitGroup = m[0].message.split('[1')[1].split('\n')
            plToAdr = ''
            for x in range(len(splitGroup)):
                if '[üëë] ' in splitGroup[x]:
                    plToAdr = plToAdr + splitGroup[x].split('[üëë] ')[1].split(' (')[0] + ' '
                else:
                    plToAdr = plToAdr + splitGroup[x].split('] ')[1].split(' (')[0] + ' '
            if plToAdr != '':
                await client.send_message(chatControl,'.tea '+plToAdr)
            await asyncio.sleep(0.5)
            await client.send_message(game,'/buttons')
            await asyncio.sleep(5)
        await client.send_message(game,run)
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å ' in m[0].message:
            await m[0].click(hardMode)
            await asyncio.sleep(0.5)
            m = await client.get_messages(game, limit=1)
            await m[0].click(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–ú–æ–Ω—Å—Ç—Ä–æ–≤ –Ω–µ—Ç' in m[0].message:
            await client.send_message(game,'/flashlight')
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            await m[0].click(0)
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=1)
            if '–ó–∞–ø–∞—Å –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª' in m[0].message:
                await m[0].click(1)
                await asyncio.sleep(1)
                await client.send_message(game,'üéí –†—é–∫–∑–∞–∫')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                bSpl = m[0].message.split('\n')
                flToWear = ''
                for b in range(len(bSpl)):
                    if bSpl[b].startswith('üî¶ –§–æ–Ω–∞—Ä–∏–∫ Ô¥æ100'):
                        flToWear = b+1
                        break
                await client.send_message(game,bSpl[flToWear])
                await asyncio.sleep(1)
                await client.send_message(game,'/flashlight')
                await asyncio.sleep(1)
                m = await client.get_messages(game, limit=1)
                await m[0].click(1)
                await asyncio.sleep(1)
                await m[0].click(0)
                await asyncio.sleep(2)
            await client.send_message(game,'üëæ –ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤')
        await asyncio.sleep(0.5)
        m = await client.get_messages(game, limit=1)
        if '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏' in m[0].message:
            almostRun = False
            await event.message.reply('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏, –∂–¥–µ–º')
            notEnoughNRG = True
        elif '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ' in m[0].message:
            almostRun = False
            await event.message.reply(m[0].message+'\n\n.leader __NICKNAME__, —á—Ç–æ–± —Å–º–µ–Ω–∏—Ç—å –ª–∏–¥–µ—Ä–∞')
        elif '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞—Ö–≤–∞—Ç' in m[0].message:
            isLocked = False
            await client.send_message(game,'/group')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üó£ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üèÉ –î–≤–∏–∂–µ–Ω–∏–µ')
            await asyncio.sleep(0.5)
            await client.send_message(game,'üí¢ –í–∫–ª—é—á–∏—Ç—å –∑–∞—Ö–≤–∞—Ç')
            while isLocked == False:
                await asyncio.sleep(0.8)
                m = await client.get_messages(game, limit=2)
                if m[0].message.startswith('‚ùóÔ∏è–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ —Ä—è–¥–æ–º'):
                    isLocked = True
                    almostRun = False
                    await event.message.reply(m[0].message)
                elif '–ó–∞—Ö–≤–∞—Ç –≥—Ä—É–ø–ø—ã –≤–∫–ª—é—á–µ–Ω' in m[1].message:
                    isLocked = True
                    await asyncio.sleep(0.5)
                    await client.send_message(game,'/buttons')
                    await asyncio.sleep(1)
                    await client.send_message(game,run)
    # <==============================================================================================GO
    if messag.startswith('.go') and sender == me and fromChat == me.id and state == 'none':
        if imhere == '':
            await client.send_message(me, '–ò–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è, –æ–∂–∏–¥–∞–π...\n–≠—Ç–æ —Ä–∞–∑–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞, –¥–∞–ª–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Å–∞–º–æ.')
            await client.send_message(game,'/fraction')
            await asyncio.sleep(1)
            await client.send_message(game,'üìÉ –°–æ—Å—Ç–∞–≤')
            await asyncio.sleep(1)
            m = await client.get_messages(game, limit=2)
            # print(event)
            # print(m[0].message)
            for s in range(len(m)):
                sostavArr = m[s].message.split('\n')
                for i in range(len(sostavArr)):
                    if nick in sostavArr[i]:
                        # print(sostavArr[i])
                        imhere = sostavArr[i].split(' üó∫')[1].split(' ‚òëÔ∏è')[0].split(' ‚úÖ')[0]
                        break
            await asyncio.sleep(random.randint(1,3))
            await client.send_message(game,'‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        if imhere != '':
            if messag == '.go':
                listing = '–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Å—Ç–∞–Ω—Ü–∏–∏, –∫—É–¥–∞ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è\nC–µ–π—á–∞—Å —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è —Ç—É—Ç: **'+imhere+'**\n'
                for x in range(len(stationNames)):
                    if x == 0: listing += '\n**üü©üü©üü©üü©–ó–ï–õ–ï–ù–ê–Øüü©üü©üü©üü©**\n'
                    elif x == 6: listing += '\n**‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è–°–ï–†–ê–Ø‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è**\n'
                    elif x == 12: listing += '\n**üß©üß©üß©üß©–°–ê–õ–ê–¢–û–í–ê–Øüß©üß©üß©üß©**\n'
                    elif x == 16: listing += '\n**üüßüüßüüßüüß–û–†–ê–ù–ñ–ï–í–ê–Øüüßüüßüüßüüß**\n'
                    elif x == 22: listing += '\n**üü•üü•üü•üü•–ö–†–ê–°–ù–ê–Øüü•üü•üü•üü•**\n'
                    elif x == 30: listing += '\n**üü¶üü¶üü¶üü¶–°–ò–ù–Ø–Øüü¶üü¶üü¶üü¶**\n'
                    elif x == 35: listing += '\n**üü™üü™üü™üü™–§–ò–û–õ–ï–¢–û–í–ê–Øüü™üü™üü™üü™**\n'
                    elif x == 40: listing += '\n**üü®üü®üü®üü®–ñ–ï–õ–¢–ê–Øüü®üü®üü®üü®**\n'
                    elif x == 42: listing += '\n**üó≥üó≥üó≥üó≥–ì–û–õ–£–ë–ê–Øüó≥üó≥üó≥üó≥**\n'
                    elif x == 46: listing += '\n**üü´üü´üü´üü´–ö–û–õ–¨–¶–ï–í–ê–Øüü´üü´üü´üü´**\n'
                    listing += str(x) + '. ' + stationNames[x]+' ‚Äî `.go '+str(x)+'`\n'
                await client.send_message(me, listing)
            else:
                destination = int(messag.split('.go ')[1])
                # startPoint = stationNames.index(imhere)
                gpsTrack = gps(imhere,destination)
                # print(gpsTrack)
                waypointMsg = '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è –∏–∑ **'+imhere+'** –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é **'+stationNames[destination]+'**\n\n–ú–∞—Ä—à—Ä—É—Ç:\n'
                nrgRaw = gpsTrack["nrg"]
                nrgLeft = nrgRaw % 5
                nrg = nrgRaw - nrgLeft
                pathStr = ''
                for p in range(len(gpsTrack["path"])):
                    path_type = ''
                    if p in range(len(gpsTrack["pathType"])):
                        if gpsTrack["pathType"][p] == 1:
                            path_type = '[üö• –ü–µ—Ä–µ—Ö–æ–¥] '
                        else:
                            path_type = '[üçô –¢—É–Ω–Ω–µ–ª—å] '
                    pathStr += stationNames[gpsTrack["path"][p]] + '\n'+path_type
                waypointMsg += pathStr+'\n\n–¢—Ä–∞—Ç–∞ —ç–Ω–µ—Ä–≥–∏–∏: '+str(nrg)
                await client.send_message(me, waypointMsg)
                state = 'walking'
                if '-' in imhere:
                    print('two stations')
                else:
                    for i in range(len(gpsTrack['path'])):
                        nextStation = gpsTrack['path'][i]
                        nxStName = stationNames[nextStation]
                        if nxStName == imhere:
                            continue
                        else:
                            #print(imhere)
                            #print(nxStName)
                            await client.send_message(game, 'üèÉ –ü–æ–∫–∏–Ω—É—Ç—å —Å—Ç–∞–Ω—Ü–∏—é')
                            await asyncio.sleep(random.randint(1,2))
                            if gpsTrack['pathType'][i-1] > 5:
                                await client.send_message(game, 'üçô –¢—É–Ω–Ω–µ–ª—å')
                            else:
                                await client.send_message(game, 'üö• –ü–µ—Ä–µ—Ö–æ–¥')
                            await asyncio.sleep(random.randint(1,2))
                            m = await client.get_messages(game, limit=1)
                            buttonsDir = m[0].reply_markup
                            for r in range(len(buttonsDir.rows)):
                                buttonsInRow = buttonsDir.rows[r].buttons
                                for b in range(len(buttonsInRow)):
                                    if stationNames[nextStation] in buttonsInRow[b].text:
                                        await asyncio.sleep(random.randint(1,2))
                                        await m[0].click(text=buttonsInRow[b].text)
                                        await asyncio.sleep(random.randint(1,2))
                            m = await client.get_messages(game, limit=1)
                            while (nxStName+'\n\nüö∏ –°—Ç–∞—Ç—É—Å: ') not in m[0].message:
                                if '–°—Ç–∞–Ω—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:' in m[0].message:
                                    await client.send_message(game, '‚û°Ô∏è –í–ø–µ—Ä—ë–¥ –Ω–∞ '+nxStName)
                                await asyncio.sleep(random.randint(1,2))
                                m = await client.get_messages(game, limit=1)
                    await client.send_message(me, '–¢—ã –¥–æ—à–µ–ª –¥–æ –∫–æ–Ω–µ—á–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏')
                    state = 'none'
        else:
            await client.send_message(me, '–¢—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ—Å—Ç–∞–≤–µ —Ñ—Ä–∞–∫—Ü–∏–∏')
    if messag.startswith('.stop') and sender == me and fromChat == me.id and state != 'none':
        if state == 'm2':
            txt = ('**–ü—Ä–æ–≤–µ–¥–µ–Ω–æ –±–æ—ë–≤ –≤ –ú2:** '+str(m2Fights)
                   + '\n**–ù–∞–π–¥–µ–Ω–æ –ß—ë—Ä–Ω—ã—Ö –î–µ—Ç—ë–Ω—ã—à–µ–π:** '+str(m2Babies)+' –∏–∑ '+str(m2Targets)+' –º–æ–±–æ–≤ __('+str("{:0.2f}".format((m2Babies/m2Targets)*100))+'%)__'
                   +'\n**–ü–æ–ª—É—á–µ–Ω–æ —á–∞—Å—Ç–µ–π –ø—Ä–æ–ø—É—Å–∫–∞ –î-6:** '+str(m2Tickets)+' __('+str("{:0.2f}".format((m2Tickets/m2Babies)*100))+'%)__')
            await event.message.reply(txt)
            m2Fights = 0
            m2Babies = 0
            m2Targets = 0
            m2Tickets = 0
        state = 'none'
        await client.send_message(me, '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')

client.start()
me = client.get_me()
client.send_message(me, '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
client.send_message(game, '/character')
client.run_until_disconnected()